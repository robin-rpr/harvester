name: master
on:
  push:
    branches:
      - master

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    container:
      image: node:dubnium-jessie
    env:
      CONFIGURATION: prod
      MONGODB_DATABASE: ${{ secrets.MONGODB_DATABASE }}
      MONGODB_USER: ${{ secrets.MONGODB_USER }}
      MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
      DOCKER_REGISTRY_HOST: ${{ secrets.DOCKER_REGISTRY_HOST }}
      GITHUB_REPOSITORY: ${{ github.repository }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Login to GitHub registry
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
          DOCKER_REGISTRY_URL: ${{ secrets.DOCKER_REGISTRY_HOST }}

      - name: Install App Dependencies
        run: npm install

      - name: Install System Dependencies
        run: |
          apt-get update
          apt-get -y install curl jq
          apt-get -y install zip unzip
          apt-get -y install gettext-base
          curl -L "https://github.com/docker/compose/releases/download/1.25.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

      - name: Environment variables substitution
        run: |
          envsubst < "docker/docker-compose.${CONFIGURATION}.yml" > "docker/docker-compose.dist.yml";
          cp -f docker/docker-compose.dist.yml docker/docker-compose.yml

      - name: Build Apps
        run: npm run build

      - name: Push harvester/api to GitHub Registry
        uses: actions-hub/docker@master
        with:
          args: push ${{ secrets.DOCKER_REGISTRY_HOST }}/${{ github.repository }}/api:latest

      - name: Push harvester/harvester to GitHub Registry
        uses: actions-hub/docker@master
        with:
          args: push ${{ secrets.DOCKER_REGISTRY_HOST }}/${{ github.repository }}/harvester:latest

      - name: Build Chrome extension
        run: |
          npm run nx build harvester --configuration=${CONFIGURATION}
          cd dist/apps/
          zip -r harvester.zip harvester

      - name: Upload Package artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: package
          path: dist/apps/harvester.zip

      - name: Upload Source artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: source
          path: dist/apps/harvester

  publish:
    name: publish
    runs-on: ubuntu-latest
    needs: [build]
    container:
      image: node:dubnium-jessie
    env:
      APP_ID: harvester-257811
    steps:
      - name: Download Package artifact
        uses: actions/download-artifact@v1
        with:
          name: package

      - name: Download Source artifact
        uses: actions/download-artifact@v1
        with:
          name: source

      - name: Save DigitalOcean kubeconfig
        uses: digitalocean/action-doctl@master
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        with:
          args: kubernetes cluster kubeconfig show k8s-cluster-name > $GITHUB_WORKSPACE/.kubeconfig

      - name: Deploy to DigitalOcean Kubernetes
        uses: lachlanevenson/k8s-kubectl
        run: sh -l -c
        with:
          args: kubectl --kubeconfig=$HOME/.kubeconfig apply -f $GITHUB_WORKSPACE/config/deployment.yml

      - name: Verify deployment
        uses: lachlanevenson/k8s-kubectl
        run: sh -l -c
        with:
          args: kubectl --kubeconfig=$HOME/.kubeconfig rollout status deployment/static-example

      - name: Publish to Chrome Web Store
        uses: Klemensas/chrome-extension-upload-action@v1.3
        with:
          # Auth refresh token
          refresh-token: ${{ secrets.REFRESH_TOKEN }}
          # Extension application target id
          app-id: $APP_ID
          # Token client id
          client-id: ${{ secrets.CLIENT_ID }}
          # Token client secret
          client-secret: ${{ secrets.CLIENT_SECRET }}
          # Name of zipped target upload file
          file-name: harvester.zip

      - name: Publish to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v1.2.5
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        with:
          build_dir: source
          fqdn: harvester.dev